package com.ready.rain.mobs;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferStrategy;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

import com.ready.rain.Game;
import com.ready.rain.entity.mib.Character;


public class Animation extends JPanel {
	boolean dir = true;
	boolean prev = false;
	double rot = 0;

	BufferedImage image7;
	BufferedImage image1;
	BufferedImage image2;
	BufferedImage image3;
	BufferedImage image4;
	BufferedImage image5;
	BufferedImage image6;
	BufferedImage img3;
	BufferedImage img1;
	BufferedImage img2;
	BufferedImage img4;
	
	public void LoadImage(){
		try{
			image7 = ImageIO.read(Animation.class.getResourceAsStream("/textures/leo_righthand_back.png"));
		}catch(Exception ex){
			ex.printStackTrace();
		}
		try{
			image1 = ImageIO.read(Animation.class.getResourceAsStream("/textures/leo_rightleg.png"));
		}catch(Exception ex){
			ex.printStackTrace();
		}
		try{
			image2 = ImageIO.read(Animation.class.getResourceAsStream("/textures/leo_leftleg.png"));
		}catch(Exception ex){
			ex.printStackTrace();
		}
		try{
			image3 = ImageIO.read(Animation.class.getResourceAsStream("/textures/leo_righttorso.png"));
		}catch(Exception ex){
			ex.printStackTrace();
		}
		try{
			image4 = ImageIO.read(Animation.class.getResourceAsStream("/textures/leo_lefttorso.png"));
		}catch(Exception ex){
			ex.printStackTrace();
		}
		try{
			image5 = ImageIO.read(Animation.class.getResourceAsStream("/textures/leo_righthand.png"));
		}catch(Exception ex){
			ex.printStackTrace();
		}
		try{
			image6 = ImageIO.read(Animation.class.getResourceAsStream("/textures/leo_lefthand.png"));
		}catch(Exception ex){
			ex.printStackTrace();
		}
		
	}



	
	public void AnimateLegs(BufferStrategy bs,Character character, boolean moving,boolean facing){
		
		int x = character.x;
		int y = character.y;
		BufferedImage img = character.img1;
			
		if(facing != prev){
			dir = true;
			rot = 0;
			prev = facing;
		}
		

		
		if (moving == true){
		if(rot >= 50){
			dir = true;
		}
		if(rot <= -50){
			dir = false;
		}
		if(dir == false){
			rot++;
		}else{
			rot--;
		}
		}else{
			if(rot >= 0)rot -= 0.5;
			if(rot <= 0)rot += 0.5;
			
		}
		if (facing == true){
			img1 = image2;
			img2 = image4;
			img3 = image7;
		}else{	
			img3 = image5;
			img1 = image1;
			img2 = image3;
		
		}
		//img3 = image5;
		//img4 = image6;
		
		
		Graphics2D g4 = (Graphics2D) bs.getDrawGraphics();
		
		g4.translate(character.x + 25 + 25, character.y - 5 - 55);
		g4.rotate(Math.toRadians(-rot));
		g4.translate(-x - 25 - 25, -y + 5 + 55);
		g4.drawImage(img3, x + 25, y -55, null);

		g4.dispose();
		
		
		Graphics2D g1 = (Graphics2D) bs.getDrawGraphics();
		
		g1.translate(x + 16 + 25, y - 5 - 10);
		g1.rotate(Math.toRadians(rot));
		g1.translate(-x - 16 - 25, -y + 5 + 10);
		g1.drawImage(img1, x + 25, y - 10, null);
	
		g1.dispose();
		
	Graphics2D g2 = (Graphics2D) bs.getDrawGraphics();
		
		g2.translate(x + 16, y - 5);
		g2.rotate(Math.toRadians(-rot));
		g2.translate(-x - 16, -y + 5);
		g2.drawImage(img1, x - 3, y - 10, null);
	
		g2.dispose();
	

	

	
	Graphics2D g3 = (Graphics2D) bs.getDrawGraphics();

	g3.drawImage(img2, x, y - 70, null);

	g3.dispose();
	
}


}
