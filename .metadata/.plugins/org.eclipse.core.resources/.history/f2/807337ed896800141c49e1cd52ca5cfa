package com.ready.rain.level;
import com.ready.rain.level.tile.Tile;
import com.ready.rain.graphics.Screen;
public class Level {

		protected int treenum;
		protected boolean trees = true;
		protected int[] treepart;
		protected int width, height;
		protected int[] tiles;	
		public Level(int width, int height) {
		this.width = width;	
		this.height = height;
		tiles = new int[width * height];

		

		generateLevel();
		}
		
		public Level (String path) {
		loadLevel (path);	
		}
		
		
		protected void generateLevel() {
			
		}
		
		private void loadLevel (String path) {
			
		}
		
		public void update(){
			
		}
		
		private void time() {
			
		}
		private int a = 16;
		public void render(int xScroll, int yScroll, Screen screen) {
		screen.setOffset(xScroll, yScroll);	
		int x0 = xScroll >> 4; 
		int x1 = (xScroll + screen.width + 16) >> 4;
		int y0 = yScroll >> 4;
		int y1 = (yScroll + screen.height) >> 4;
//<<<<<<< HEAD
//		
//=======
//>>>>>>> c3bafca37aff0a6533e1780a72674cbf7c621d30
		
		
			for (int y = y0; y < y1;y++){
				for (int x = x0; x < x1;x++){
				getTile(x,y).render(x,y,screen);
			if (tiles[x + y * width] == 4){
					Tile.tree.render(x,y,screen);
					Tile.tree1.render(x+1,y,screen);
					Tile.tree2.render(x+2,y,screen);
					treenum = x;
					x+=2;
				}else if (x == treenum){
					Tile.tree3.render(x,y,screen);
					Tile.tree4.render(x+1,y,screen);
					Tile.tree5.render(x+2,y,screen);
				}
			}
		}
		}
		
		public Tile getTile(int x, int y) {
			if (x < 0 || y < 0 || x >= width || y >= height) return Tile.voidTile;
			if (tiles[x + y * width] == 0) return Tile.grass2;
			if (tiles[x + y * width] == 1) return Tile.grass3;
			if (tiles[x + y * width] == 2) return Tile.grass4;
			if (tiles[x + y * width] == 3) return Tile.grass5;

			


			
			
			return Tile.grass;
		}
		
}


